{
  "name": "HubSpot → PostgreSQL - Sincronização Contacts (SQL)",
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "hours", 
              "hoursInterval": 2
            }
          ]
        }
      },
      "id": "cron-trigger-001",
      "name": "Cron Trigger - A cada 2h",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.1,
      "position": [240, 300]
    },
    {
      "parameters": {
        "query": "SELECT COALESCE(MAX(lastmodifieddate), '1970-01-01'::timestamp) as last_sync_timestamp FROM contacts WHERE sync_status = 'active'"
      },
      "id": "postgres-lastsync-002",
      "name": "PostgreSQL - Buscar Último Sync",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.4,
      "position": [460, 300]
    },
    {
      "parameters": {
        "functionCode": "const lastSync = $json.last_sync_timestamp;\nconst lastSyncDate = new Date(lastSync);\nlastSyncDate.setMinutes(lastSyncDate.getMinutes() - 5);\nconst filterTimestamp = Math.floor(lastSyncDate.getTime());\n\nconsole.log(`[CONTACTS SYNC] Buscando contatos modificados após: ${lastSyncDate.toISOString()}`);\n\nreturn [{\n  json: {\n    lastmodifieddate_filter: filterTimestamp,\n    lastmodifieddate_iso: lastSyncDate.toISOString()\n  }\n}];"
      },
      "id": "calc-filter-003",
      "name": "Calcular Filtro de Data",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [680, 300]
    },
    {
      "parameters": {
        "resource": "contact",
        "operation": "getAll",
        "returnAll": false,
        "limit": 100,
        "filters": {
          "filterGroupsUi": {
            "filterGroupsValues": [
              {
                "filtersUi": {
                  "filterValues": [
                    {
                      "propertyName": "lastmodifieddate",
                      "operator": "GT",
                      "value": "={{ $json.lastmodifieddate_filter }}"
                    }
                  ]
                }
              }
            ]
          }
        },
        "additionalFields": {
          "properties": [
            "email", "firstname", "lastname", "company", "jobtitle", "website",
            "phone", "mobilephone", "hs_whatsapp_phone_number", "govcs_i_phone_number",
            "lifecyclestage", "hs_lead_status", "codigo_do_voucher", "atendimento_ativo_por",
            "buscador_ncm", "cnpj_da_empresa_pesquisada", "contato_por_whatsapp",
            "criado_whatsapp", "whatsapp_api", "whatsapp_error_spread_chat",
            "hs_calculated_phone_number", "hs_calculated_mobile_number",
            "hs_calculated_phone_number_country_code", "hs_calculated_phone_number_area_code",
            "telefone_ravena_classificado__revops_", "celular1_gerador_de_personas",
            "celular2_gerador_de_personas", "address", "city", "state", "zip", "country",
            "createdate", "lastmodifieddate", "closedate", "hs_lead_source",
            "hs_original_source", "hs_original_source_data_1", "hs_original_source_data_2",
            "hubspot_owner_id"
          ]
        }
      },
      "id": "hubspot-004",
      "name": "HubSpot - Buscar Contatos",
      "type": "n8n-nodes-base.hubspot",
      "typeVersion": 2,
      "position": [900, 300]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.length }}",
              "operation": "isNotEmpty"
            }
          ]
        }
      },
      "id": "if-hascontacts-005",
      "name": "IF - Tem Contatos Novos?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [1120, 300]
    },
    {
      "parameters": {
        "functionCode": "// Gerar SQL dinâmico para UPSERT\nconst items = $input.all();\nconst queries = [];\n\nfunction escapeSQL(value) {\n  if (value === null || value === undefined) return 'NULL';\n  if (typeof value === 'number') return value;\n  if (typeof value === 'boolean') return value;\n  return `'${String(value).replace(/'/g, \"''\")}'`;\n}\n\nfunction convertDate(dateStr) {\n  if (!dateStr) return 'NULL';\n  try {\n    return `'${new Date(dateStr).toISOString()}'`;\n  } catch (e) {\n    return 'NULL';\n  }\n}\n\nfor (const item of items) {\n  const contact = item.json;\n  const props = contact.properties || {};\n  \n  const sql = `\n    INSERT INTO contacts (\n      id, hs_object_id, email, firstname, lastname, company, jobtitle, website,\n      phone, mobilephone, hs_whatsapp_phone_number, govcs_i_phone_number,\n      lifecyclestage, hs_lead_status, hubspot_owner_id, codigo_do_voucher,\n      atendimento_ativo_por, buscador_ncm, cnpj_da_empresa_pesquisada,\n      contato_por_whatsapp, criado_whatsapp, whatsapp_api, whatsapp_error_spread_chat,\n      hs_calculated_phone_number, hs_calculated_mobile_number,\n      hs_calculated_phone_number_country_code, hs_calculated_phone_number_area_code,\n      telefone_ravena_classificado__revops_, celular1_gerador_de_personas,\n      celular2_gerador_de_personas, address, city, state, zip, country,\n      createdate, lastmodifieddate, closedate, hs_lead_source, hs_original_source,\n      hs_original_source_data_1, hs_original_source_data_2, last_sync_date,\n      sync_status, hubspot_raw_data\n    ) VALUES (\n      ${escapeSQL(contact.id)},\n      ${escapeSQL(contact.id)},\n      ${escapeSQL(props.email)},\n      ${escapeSQL(props.firstname)},\n      ${escapeSQL(props.lastname)},\n      ${escapeSQL(props.company)},\n      ${escapeSQL(props.jobtitle)},\n      ${escapeSQL(props.website)},\n      ${escapeSQL(props.phone)},\n      ${escapeSQL(props.mobilephone)},\n      ${escapeSQL(props.hs_whatsapp_phone_number)},\n      ${escapeSQL(props.govcs_i_phone_number)},\n      ${escapeSQL(props.lifecyclestage)},\n      ${escapeSQL(props.hs_lead_status)},\n      ${escapeSQL(props.hubspot_owner_id)},\n      ${escapeSQL(props.codigo_do_voucher)},\n      ${escapeSQL(props.atendimento_ativo_por)},\n      ${escapeSQL(props.buscador_ncm)},\n      ${escapeSQL(props.cnpj_da_empresa_pesquisada)},\n      ${escapeSQL(props.contato_por_whatsapp)},\n      ${escapeSQL(props.criado_whatsapp)},\n      ${escapeSQL(props.whatsapp_api)},\n      ${escapeSQL(props.whatsapp_error_spread_chat)},\n      ${escapeSQL(props.hs_calculated_phone_number)},\n      ${escapeSQL(props.hs_calculated_mobile_number)},\n      ${escapeSQL(props.hs_calculated_phone_number_country_code)},\n      ${escapeSQL(props.hs_calculated_phone_number_area_code)},\n      ${escapeSQL(props.telefone_ravena_classificado__revops_)},\n      ${escapeSQL(props.celular1_gerador_de_personas)},\n      ${escapeSQL(props.celular2_gerador_de_personas)},\n      ${escapeSQL(props.address)},\n      ${escapeSQL(props.city)},\n      ${escapeSQL(props.state)},\n      ${escapeSQL(props.zip)},\n      ${escapeSQL(props.country)},\n      ${convertDate(props.createdate)},\n      ${convertDate(props.lastmodifieddate)},\n      ${convertDate(props.closedate)},\n      ${escapeSQL(props.hs_lead_source)},\n      ${escapeSQL(props.hs_original_source)},\n      ${escapeSQL(props.hs_original_source_data_1)},\n      ${escapeSQL(props.hs_original_source_data_2)},\n      NOW(),\n      'active',\n      ${escapeSQL(JSON.stringify(contact))}\n    )\n    ON CONFLICT (id) DO UPDATE SET\n      email = EXCLUDED.email,\n      firstname = EXCLUDED.firstname,\n      lastname = EXCLUDED.lastname,\n      company = EXCLUDED.company,\n      jobtitle = EXCLUDED.jobtitle,\n      website = EXCLUDED.website,\n      phone = EXCLUDED.phone,\n      mobilephone = EXCLUDED.mobilephone,\n      hs_whatsapp_phone_number = EXCLUDED.hs_whatsapp_phone_number,\n      govcs_i_phone_number = EXCLUDED.govcs_i_phone_number,\n      lifecyclestage = EXCLUDED.lifecyclestage,\n      hs_lead_status = EXCLUDED.hs_lead_status,\n      hubspot_owner_id = EXCLUDED.hubspot_owner_id,\n      codigo_do_voucher = EXCLUDED.codigo_do_voucher,\n      lastmodifieddate = EXCLUDED.lastmodifieddate,\n      last_sync_date = NOW(),\n      hubspot_raw_data = EXCLUDED.hubspot_raw_data;\n  `;\n  \n  queries.push({ json: { query: sql.trim() } });\n}\n\nconsole.log(`[CONTACTS SYNC] Geradas ${queries.length} queries SQL`);\nreturn queries;"
      },
      "id": "generate-sql-006",
      "name": "Gerar SQL Dinâmico",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [1340, 200]
    },
    {
      "parameters": {
        "query": "={{ $json.query }}"
      },
      "id": "postgres-execute-007",
      "name": "PostgreSQL - Execute SQL",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.4,
      "position": [1560, 200]
    },
    {
      "parameters": {
        "functionCode": "const items = $input.all();\nconst successCount = items.length;\nconst timestamp = new Date().toISOString();\n\nconsole.log(`[CONTACTS SYNC] ${successCount} contatos sincronizados via SQL`);\n\nreturn [{\n  json: {\n    sync_type: 'contacts_sql',\n    timestamp: timestamp,\n    contacts_processed: successCount,\n    status: 'success'\n  }\n}];"
      },
      "id": "log-success-008",
      "name": "Log Sucesso",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [1780, 200]
    },
    {
      "parameters": {
        "functionCode": "const timestamp = new Date().toISOString();\nconsole.log(`[CONTACTS SYNC] Nenhum contato modificado encontrado`);\n\nreturn [{\n  json: {\n    sync_type: 'contacts_sql',\n    timestamp: timestamp,\n    contacts_processed: 0,\n    status: 'no_changes'\n  }\n}];"
      },
      "id": "log-nochanges-009",
      "name": "Log Sem Mudanças",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [1340, 400]
    }
  ],
  "connections": {
    "Cron Trigger - A cada 2h": {
      "main": [[{"node": "PostgreSQL - Buscar Último Sync", "type": "main", "index": 0}]]
    },
    "PostgreSQL - Buscar Último Sync": {
      "main": [[{"node": "Calcular Filtro de Data", "type": "main", "index": 0}]]
    },
    "Calcular Filtro de Data": {
      "main": [[{"node": "HubSpot - Buscar Contatos", "type": "main", "index": 0}]]
    },
    "HubSpot - Buscar Contatos": {
      "main": [[{"node": "IF - Tem Contatos Novos?", "type": "main", "index": 0}]]
    },
    "IF - Tem Contatos Novos?": {
      "main": [
        [{"node": "Gerar SQL Dinâmico", "type": "main", "index": 0}],
        [{"node": "Log Sem Mudanças", "type": "main", "index": 0}]
      ]
    },
    "Gerar SQL Dinâmico": {
      "main": [[{"node": "PostgreSQL - Execute SQL", "type": "main", "index": 0}]]
    },
    "PostgreSQL - Execute SQL": {
      "main": [[{"node": "Log Sucesso", "type": "main", "index": 0}]]
    }
  },
  "settings": {"executionOrder": "v1"},
  "staticData": null,
  "tags": ["hubspot", "postgresql", "sync", "contacts", "sql"],
  "triggerCount": 0,
  "updatedAt": "2025-01-27T15:00:00.000Z",
  "versionId": "2"
}
